---
# This playbook demonstrates how to manage docker on the Nexus 9000 switch.
#
# Using Ansible to manage docker in the native bash environment is only
# supported on Nexus 9000 switches running image version 9.2(1) or later.

# ----------------------------------------------------------------------#
# This first play will setup a user called 'devops' that can be used    #
# to access and manage the linux bash shell environment on NXOS.        #
# ----------------------------------------------------------------------#
- name: Setup bash shell user account.
  hosts: nxos_vsh
  gather_facts: no

  vars:
    network_connection:
      username: "admin"
      password: "password"
      transport: cli
      host: "{{ inventory_hostname }}"

  tasks:
    - name: Configure nxapi and devops user
      nxos_config:
        lines:
          - feature nxapi
          - nxapi http port 80
          - feature ssh
          - username devops password devopspassword role network-admin
          - username devops shelltype bash
        provider: "{{ network_connection }}"


# --------------------------------------------------------------------------#
# This second play will access the linux bash environment and manage docker #
# --------------------------------------------------------------------------#
- name: Manage linux bash environment on NXOS.
  hosts: nxos_bash
  gather_facts: no

  environment:
    http_proxy: http://proxy-example.com:80
    https_proxy: https://proxy-example.com:80

  tasks:
    - name: Start The Docker Service
      service:
        name: docker
        state: started
      become: yes
      become_method: sudo

    # Uncomment the following 3 tasks if a proxy is needed for
    # Network connectivity to the PyPY server.

    #- name: Configure http proxy info in /etc/sysconfig/docker
    #  lineinfile:
    #    path: /etc/sysconfig/docker
    #    regexp: 'export http_proxy'
    #    line: 'export http_proxy=http://proxy-example.com:80'
    #  become: yes
    #  become_method: sudo

    #- name: Configure https proxy info in /etc/sysconfig/docker
    #  lineinfile:
    #    path: /etc/sysconfig/docker
    #    regexp: 'export https_proxy'
    #    line: 'export https_proxy=http://proxy-example.com:80'
    #  become: yes
    #  become_method: sudo

    #- name: Re-start Docker Service Following Configuration of docker configuration file
    #  service:
    #    name: docker
    #    state: restarted
    #  become: yes
    #  become_method: sudo

    - name: Pip install docker-py package
      command: ip netns exec management pip install docker-py
      become: yes
      become_method: sudo

    - name: Pull Ubuntu Docker Image
      docker_image:
        name: ubuntu
      become: yes
      become_method: sudo

    - name: Create a container
      docker_container:
        name: ansible_test
        image: ubuntu
      become: yes
      become_method: sudo
